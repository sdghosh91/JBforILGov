select t4.region, shifts.week, shifts.vanid, actives.status, actives.everActive,
case when shifts.now_scheduled>0 then 1 else 0 end as top_scheduled,
case when shifts.now_invited>0 and shifts.now_scheduled=0 then 1 else 0 end as top_invited
from
(
    select actives.vanid, week, status, actives.organizer,
        case when week <= firstweek then 'EverActive' else null end as everActive
    from public.historic_actives as actives
    join
    (
        select vanid, max(week) as firstweek
        from public.historic_actives as actives
        where status = 'Active'
        group by vanid
    ) activeMins on actives.vanid = activeMins.vanid
) as actives
left join
    (
    select signup.canvassedby, signup.vanid, tweeks.week,
    sum(case when (scheduled_status = 1 or confirmed_status = 1 or left_msg_status = 1 or conf_twice_status = 1) and declined_status = 0 and no_show_status = 0 and invited_status = 0 then 1 else 0 end) as now_scheduled, 
    sum(case when invited_status = 1 and declined_status = 0 and no_show_status = 0 then 1 else 0 end) as now_invited
    from
        (
        select t1.eventsignupid, t1.vanid, t1.canvassedby, min(t2.datecreated) as signup_date,
        cast(left(t1.datetimeoffsetbegin,10) as date) as event_date,
        max(case when (t2.eventstatusid='2') THEN 1 else 0 end) as completed_status,
        max(case when (t2.eventstatusid='1') THEN 1 else 0 end) as scheduled_status,
        max(case when (t2.eventstatusid='3') THEN 1 else 0 end) as declined_status,
        max(case when (t2.eventstatusid='11') THEN 1 else 0 end) as confirmed_status,
        max(case when (t2.eventstatusid='18') THEN 1 else 0 end) as left_msg_status,
        max(case when (t2.eventstatusid='6') THEN 1 else 0 end) as no_show_status,
        max(case when (t2.eventstatusid='15') THEN 1 else 0 end) as conf_twice_status,
        max(case when (t2.eventstatusid='4') THEN 1 else 0 end) as invited_status,
        max(case when (t2.eventstatusid='2') THEN t2.datecreated else null end) as completed_date,
        max(case when (t2.eventstatusid='1') THEN t2.datecreated else null end) as scheduled_date,
        max(case when (t2.eventstatusid='3') THEN t2.datecreated else null end) as declined_date,
        max(case when (t2.eventstatusid='11') THEN t2.datecreated else null end) as confirmed_date,
        max(case when (t2.eventstatusid='18') THEN t2.datecreated else null end) as left_msg_date,
        max(case when (t2.eventstatusid='6') THEN t2.datecreated else null end) as no_show_date,
        max(case when (t2.eventstatusid='15') THEN t2.datecreated else null end) as conf_twice_date,
        max(case when (t2.eventstatusid='4') THEN t2.datecreated else null end) as invited_date
        from vansync_il_gov_2018.dnc_eventsignups T1
        join vansync_il_gov_2018.dnc_eventsignupsstatuses T2 on t1.eventsignupid=t2.eventsignupid
            WHERE 
            (
            (t1.eventroleid='191345' OR t1.eventroleid='186915' OR t1.eventroleid='186911')
            AND left(t2.datecreated,10) >= '2017-07-24'
            )
        group by t1.eventsignupid, t1.vanid, t1.canvassedby, event_date
        ) as signup
    JOIN public.weeks tweeks on tweeks.date=signup.event_date
    group by signup.canvassedby, signup.vanid, tweeks.week
    ) as shifts on shifts.vanid=actives.vanid and shifts.week=actives.week
join vansync_il_gov_2018.dnc_users t3 on t3.userid=shifts.canvassedby
join public.matchfile_orgcode t4 on t4.organizer=t3.lastname+', '+t3.firstname
where actives.everActive = 'EverActive'
