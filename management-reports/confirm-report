select t4.region, t4.org_code, t5.week, 
    scheduled.event_date, scheduled.vanid, scheduled.eventsignupid,
    t4.organizer, 
    case when (scheduled.confirmed>0 and scheduled.declined=0) then 1 else null end as confirmeds, 
    scheduled as scheduled_shifts,
    completed as completed_shifts
from
(
    select signup.eventsignupid, signup.vanid, signup.canvassedby,
signup.event_date, signup.completed, signup.scheduled, signup.declined, signup.confirmed, signup.left_msg, signup.no_show, signup.conf_twice, signup.invited
    from
    (
        select t1.eventsignupid, t1.vanid, t1.canvassedby, min(t2.datecreated) as signup_date,
            cast(left(t1.datetimeoffsetbegin,10) as date) as event_date,
            count(case when (t2.eventstatusid='2') THEN 1 else null end) as completed,
            count(case when (t2.eventstatusid='1') THEN 1 else null end) as scheduled,
            count(case when (t2.eventstatusid='3') THEN 1 else null end) as declined,
            count(case when (t2.eventstatusid='11') THEN 1 else null end) as confirmed,
            count(case when (t2.eventstatusid='18') THEN 1 else null end) as left_msg,
            count(case when (t2.eventstatusid='6') THEN 1 else null end) as no_show,
            count(case when (t2.eventstatusid='15') THEN 1 else null end) as conf_twice,
count(case when (t2.eventstatusid='4')THEN 1 else null end) as invited
        from vansync_il_gov_2018.dnc_eventsignups T1
        join vansync_il_gov_2018.dnc_eventsignupsstatuses T2 on t1.eventsignupid=t2.eventsignupid
        WHERE (
            (t1.eventroleid='191345' OR t1.eventroleid='186915' OR t1.eventroleid='186911')
            AND left(t2.datecreated,10) >= '2017-07-24'
            AND left(t2.datecreated,10) <= getdate()
        )
        group by t1.eventsignupid, t1.vanid, t1.canvassedby, event_date
) as signup
) as scheduled
join vansync_il_gov_2018.dnc_users t3 on t3.userid=scheduled.canvassedby
join public.matchfile_orgcode t4 on t4.organizer=t3.lastname+', '+t3.firstname
join public.weeks t5 on t5.date=scheduled.event_date
where (scheduled.scheduled>0 or scheduled.confirmed>0 or scheduled.left_msg>0 or scheduled.conf_twice>0 or scheduled.invited>0)
